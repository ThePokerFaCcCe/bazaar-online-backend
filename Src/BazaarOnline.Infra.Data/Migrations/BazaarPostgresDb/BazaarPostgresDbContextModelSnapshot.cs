// <auto-generated />
using System;
using BazaarOnline.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BazaarOnline.Infra.Data.Migrations.BazaarPostgresDb
{
    [DbContext(typeof(BazaarPostgresDbContext))]
    partial class BazaarPostgresDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("ContactType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<double?>("Latitude")
                        .HasPrecision(3, 7)
                        .HasColumnType("double precision");

                    b.Property<double?>("Longitude")
                        .HasPrecision(3, 7)
                        .HasColumnType("double precision");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("integer");

                    b.Property<bool>("ShowExactCoordinates")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("StatusReason")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("StatusType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("Advertisements", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.AdvertisementFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryFeatureId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("CategoryFeatureId");

                    b.ToTable("AdvertisementFeatures", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.AdvertisementPicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("integer");

                    b.Property<int>("FileCenterId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("FileCenterId");

                    b.ToTable("AdvertisementPictures", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.CategoryFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("FeatureId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFilterable")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsShownInList")
                        .HasColumnType("boolean");

                    b.Property<int>("SortNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FeatureId");

                    b.ToTable("CategoryFeatures", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.Blocklist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BlockedUserId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.Property<string>("BlockerId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("BlockedUserId");

                    b.HasIndex("BlockerId");

                    b.ToTable("Blocklist", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.Conversation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Conversation", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.DeletedConversation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("UserId");

                    b.ToTable("DeletedConversations", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.DeletedMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("MessageId")
                        .HasColumnType("uuid");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("MessageId");

                    b.HasIndex("UserId");

                    b.ToTable("DeletedMessage", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AttachmentJson")
                        .HasColumnType("text");

                    b.Property<string>("AttachmentType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("NoAttachment");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEdited")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsSeen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("ReplyToId")
                        .HasColumnType("uuid");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasDefaultValue("");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("ReplyToId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IntegerTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Position")
                        .HasColumnType("integer");

                    b.Property<int?>("SelectTypeId")
                        .HasColumnType("integer");

                    b.Property<int?>("StringTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IntegerTypeId");

                    b.HasIndex("SelectTypeId");

                    b.HasIndex("StringTypeId");

                    b.ToTable("Features", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureIntegerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("Maximum")
                        .HasColumnType("bigint");

                    b.Property<long>("Minimum")
                        .HasColumnType("bigint");

                    b.Property<string>("Placeholder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FeatureIntegerTypes", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureSelectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FeatureSelectTypes", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureStringType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MaxLength")
                        .HasColumnType("integer");

                    b.Property<int>("MinLength")
                        .HasColumnType("integer");

                    b.Property<string>("Placeholder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Regex")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FeatureStringTypes", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Maps.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AmarCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AmarCode")
                        .IsUnique();

                    b.HasIndex("ProvinceId");

                    b.ToTable("Cities", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Maps.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AmarCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("AmarCode")
                        .IsUnique();

                    b.ToTable("Provinces", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.UploadCenter.FileCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ExtraProperties")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<long>("SizeKB")
                        .HasColumnType("bigint");

                    b.Property<string>("UsageType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FileCenter", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<int>("AnswerHourEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(23);

                    b.Property<int>("AnswerHourStart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasDefaultValue("کاربر بازار");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPhoneNumberActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementBookmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAdvertisementBookmark", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAdvertisementHistories", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAdvertisementNotes", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.ValidationCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ActiveCodes", (string)null);
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.Advertisement", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Categories.Category", "Category")
                        .WithMany("Advertisements")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Maps.City", "City")
                        .WithMany("Advertisements")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Maps.Province", "Province")
                        .WithMany("Advertisements")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany("Advertisements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("City");

                    b.Navigation("Province");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.AdvertisementFeature", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany("AdvertisementFeatures")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Categories.CategoryFeature", "CategoryFeature")
                        .WithMany("AdvertisementFeatures")
                        .HasForeignKey("CategoryFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("CategoryFeature");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.AdvertisementPicture", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany("Pictures")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.UploadCenter.FileCenter", "FileCenter")
                        .WithMany()
                        .HasForeignKey("FileCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("FileCenter");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.Category", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Categories.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.CategoryFeature", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Categories.Category", "Category")
                        .WithMany("CategoryFeatures")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Features.Feature", "Feature")
                        .WithMany("CategoryFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.Blocklist", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "BlockedUser")
                        .WithMany()
                        .HasForeignKey("BlockedUserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "Blocker")
                        .WithMany()
                        .HasForeignKey("BlockerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BlockedUser");

                    b.Navigation("Blocker");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.Conversation", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany()
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("Customer");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.DeletedConversation", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Conversations.Conversation", "Conversation")
                        .WithMany("DeletedConversations")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.DeletedMessage", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Conversations.Conversation", "Conversation")
                        .WithMany()
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Conversations.Message", "Message")
                        .WithMany("DeletedMessages")
                        .HasForeignKey("MessageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("Message");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.Message", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Conversations.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Conversations.Message", "ReplyTo")
                        .WithMany("Replies")
                        .HasForeignKey("ReplyToId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Conversation");

                    b.Navigation("ReplyTo");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.Feature", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Features.FeatureIntegerType", "IntegerType")
                        .WithMany("Features")
                        .HasForeignKey("IntegerTypeId");

                    b.HasOne("BazaarOnline.Domain.Entities.Features.FeatureSelectType", "SelectType")
                        .WithMany("Features")
                        .HasForeignKey("SelectTypeId");

                    b.HasOne("BazaarOnline.Domain.Entities.Features.FeatureStringType", "StringType")
                        .WithMany("Features")
                        .HasForeignKey("StringTypeId");

                    b.Navigation("IntegerType");

                    b.Navigation("SelectType");

                    b.Navigation("StringType");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Maps.City", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Maps.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementBookmark", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany("UserBookmarks")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany("AdvertisementBookmarks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementHistory", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany("WatchedUsers")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany("WatchedAdvertisements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementNote", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany("UserNotes")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany("AdvertisementNotes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.ValidationCode", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany("ValidationCodes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.Advertisement", b =>
                {
                    b.Navigation("AdvertisementFeatures");

                    b.Navigation("Pictures");

                    b.Navigation("UserBookmarks");

                    b.Navigation("UserNotes");

                    b.Navigation("WatchedUsers");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.Category", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("CategoryFeatures");

                    b.Navigation("ChildCategories");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.CategoryFeature", b =>
                {
                    b.Navigation("AdvertisementFeatures");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.Conversation", b =>
                {
                    b.Navigation("DeletedConversations");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Conversations.Message", b =>
                {
                    b.Navigation("DeletedMessages");

                    b.Navigation("Replies");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.Feature", b =>
                {
                    b.Navigation("CategoryFeatures");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureIntegerType", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureSelectType", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureStringType", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Maps.City", b =>
                {
                    b.Navigation("Advertisements");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Maps.Province", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("AdvertisementBookmarks");

                    b.Navigation("AdvertisementNotes");

                    b.Navigation("Advertisements");

                    b.Navigation("ValidationCodes");

                    b.Navigation("WatchedAdvertisements");
                });
#pragma warning restore 612, 618
        }
    }
}
