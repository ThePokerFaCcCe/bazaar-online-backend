// <auto-generated />
using System;
using BazaarOnline.Infra.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BazaarOnline.Infra.Data.Migrations
{
    [DbContext(typeof(BazaarDbContext))]
    [Migration("20230407151515_MG_AdvertisementCoordinatesPrecise")]
    partial class MG_AdvertisementCoordinatesPrecise
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double?>("Latitude")
                        .HasPrecision(3, 7)
                        .HasColumnType("float(3)");

                    b.Property<double?>("Longitude")
                        .HasPrecision(3, 7)
                        .HasColumnType("float(3)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<bool>("ShowExactCoordinates")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("StatusReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StatusType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("UserId");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.AdvertisementFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryFeatureId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("CategoryFeatureId");

                    b.ToTable("AdvertisementFeatures");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.AdvertisementPicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<int>("FileCenterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("FileCenterId");

                    b.ToTable("AdvertisementPictures");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.CategoryFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<bool>("IsFilterable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShownInList")
                        .HasColumnType("bit");

                    b.Property<int>("SortNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("FeatureId");

                    b.ToTable("CategoryFeatures");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IntegerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("SelectTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("StringTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IntegerTypeId");

                    b.HasIndex("SelectTypeId");

                    b.HasIndex("StringTypeId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureIntegerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long>("Maximum")
                        .HasColumnType("bigint");

                    b.Property<long>("Minimum")
                        .HasColumnType("bigint");

                    b.Property<string>("Placeholder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FeatureIntegerTypes");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureSelectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FeatureSelectTypes");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureStringType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MaxLength")
                        .HasColumnType("int");

                    b.Property<int>("MinLength")
                        .HasColumnType("int");

                    b.Property<string>("Placeholder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FeatureStringTypes");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Maps.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AmarCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmarCode")
                        .IsUnique();

                    b.HasIndex("ProvinceId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Maps.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AmarCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AmarCode")
                        .IsUnique();

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.UploadCenter.FileCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<long>("SizeKB")
                        .HasColumnType("bigint");

                    b.Property<string>("UsageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileCenter");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasDefaultValue("کاربر بازار");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPhoneNumberActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementBookmark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAdvertisementBookmark");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAdvertisementHistories");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAdvertisementNotes");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.ValidationCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ActiveCodes");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.Advertisement", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Categories.Category", "Category")
                        .WithMany("Advertisements")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Maps.City", "City")
                        .WithMany("Advertisements")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Maps.Province", "Province")
                        .WithMany("Advertisements")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany("Advertisements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("City");

                    b.Navigation("Province");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.AdvertisementFeature", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany("AdvertisementFeatures")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Categories.CategoryFeature", "CategoryFeature")
                        .WithMany("AdvertisementFeatures")
                        .HasForeignKey("CategoryFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("CategoryFeature");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.AdvertisementPicture", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany("Pictures")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.UploadCenter.FileCenter", "FileCenter")
                        .WithMany()
                        .HasForeignKey("FileCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("FileCenter");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.Category", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Categories.Category", "ParentCategory")
                        .WithMany("ChildCategories")
                        .HasForeignKey("ParentCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.CategoryFeature", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Categories.Category", "Category")
                        .WithMany("CategoryFeatures")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Features.Feature", "Feature")
                        .WithMany("CategoryFeatures")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.Feature", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Features.FeatureIntegerType", "IntegerType")
                        .WithMany("Features")
                        .HasForeignKey("IntegerTypeId");

                    b.HasOne("BazaarOnline.Domain.Entities.Features.FeatureSelectType", "SelectType")
                        .WithMany("Features")
                        .HasForeignKey("SelectTypeId");

                    b.HasOne("BazaarOnline.Domain.Entities.Features.FeatureStringType", "StringType")
                        .WithMany("Features")
                        .HasForeignKey("StringTypeId");

                    b.Navigation("IntegerType");

                    b.Navigation("SelectType");

                    b.Navigation("StringType");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Maps.City", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Maps.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementBookmark", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany("UserBookmarks")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany("AdvertisementBookmarks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementHistory", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany("WatchedUsers")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany("WatchedAdvertisements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.UserAdvertisementNote", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Advertisements.Advertisement", "Advertisement")
                        .WithMany("UserNotes")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany("AdvertisementNotes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.ValidationCode", b =>
                {
                    b.HasOne("BazaarOnline.Domain.Entities.Users.User", "User")
                        .WithMany("ValidationCodes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Advertisements.Advertisement", b =>
                {
                    b.Navigation("AdvertisementFeatures");

                    b.Navigation("Pictures");

                    b.Navigation("UserBookmarks");

                    b.Navigation("UserNotes");

                    b.Navigation("WatchedUsers");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.Category", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("CategoryFeatures");

                    b.Navigation("ChildCategories");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Categories.CategoryFeature", b =>
                {
                    b.Navigation("AdvertisementFeatures");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.Feature", b =>
                {
                    b.Navigation("CategoryFeatures");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureIntegerType", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureSelectType", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Features.FeatureStringType", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Maps.City", b =>
                {
                    b.Navigation("Advertisements");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Maps.Province", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("BazaarOnline.Domain.Entities.Users.User", b =>
                {
                    b.Navigation("AdvertisementBookmarks");

                    b.Navigation("AdvertisementNotes");

                    b.Navigation("Advertisements");

                    b.Navigation("ValidationCodes");

                    b.Navigation("WatchedAdvertisements");
                });
#pragma warning restore 612, 618
        }
    }
}
